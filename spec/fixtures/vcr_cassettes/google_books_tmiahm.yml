---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/books/v1/volumes?intitle=The%20Moon%20is%20a%20Harsh%20Mistress&key=<google_books_api_key>&q=The%20Moon%20is%20a%20Harsh%20Mistress
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Tue, 14 Feb 2023 21:37:02 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJraW5kIjogImJvb2tzI3ZvbHVtZXMiLAogICJ0b3RhbEl0ZW1zIjogMTQzMCwKICAiaXRlbXMiOiBbCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJjTVppRHdBQVFCQUoiLAogICAgICAiZXRhZyI6ICJoK1JPR0w1RkY5SSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL2NNWmlEd0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJUaGUgTW9vbiBJcyBhIEhhcnNoIE1pc3RyZXNzIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJSb2JlcnQgQS4gSGVpbmxlaW4iCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlBlbmd1aW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTgtMDctMzEiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJGb3IgZmFucyBvZiBBcnRlbWlz4oCUdGhlIHZpc2lvbmFyeSB0b3VyIGRlIGZvcmNlIGZyb20g4oCcb25lIG9mIHRoZSBncmFuZCBtYXN0ZXJzIG9mIHNjaWVuY2UgZmljdGlvbuKAnSAoVGhlIFdhbGwgU3RyZWV0IEpvdXJuYWwpLiBXaWRlbHkgYWNrbm93bGVkZ2VkIGFzIG9uZSBvZiBSb2JlcnQgQS4gSGVpbmxlaW4ncyBncmVhdGVzdCB3b3JrcywgVGhlIE1vb24gSXMgYSBIYXJzaCBNaXN0cmVzcyByb3NlIGZyb20gdGhlIGdvbGRlbiBhZ2Ugb2Ygc2NpZW5jZSBmaWN0aW9uIHRvIGJlY29tZSBhbiB1bmRpc3B1dGVkIGNsYXNzaWPigJRhbmQgYSB0b3VjaHN0b25lIGZvciB0aGUgcGhpbG9zb3BoeSBvZiBwZXJzb25hbCByZXNwb25zaWJpbGl0eSBhbmQgcG9saXRpY2FsIGZyZWVkb20uIEEgcmV2b2x1dGlvbiBvbiBhIGx1bmFyIHBlbmFsIGNvbG9ueeKAlGFpZGVkIGJ5IGEgc2VsZi1hd2FyZSBzdXBlcmNvbXB1dGVy4oCUcHJvdmlkZXMgdGhlIGZyYW1ld29yayBmb3IgYSBzdG9yeSBvZiBhIGRpdmVyc2UgZ3JvdXAgb2YgbWVuIGFuZCB3b21lbiBncmFwcGxpbmcgd2l0aCB0aGUgZXZlci1jaGFuZ2luZyBkZWZpbml0aW9ucyBvZiBodW1hbml0eSwgdGVjaG5vbG9neSwgYW5kIGZyZWUgd2lsbOKAlHRoZW1lcyB0aGF0IHJlc29uYXRlIGp1c3QgYXMgc3Ryb25nbHkgdG9kYXkgYXMgdGhleSBkaWQgd2hlbiB0aGUgbm92ZWwgd2FzIGZpcnN0IHB1Ymxpc2hlZC4gVGhlIE1vb24gSXMgYSBIYXJzaCBNaXN0cmVzcyBnaXZlcyByZWFkZXJzIGFuIGV4dHJhb3JkaW5hcnksIHRob3VnaHQtcHJvdm9raW5nIGdsaW1wc2UgaW50byB0aGUgbWluZCBvZiBSb2JlcnQgQS4gSGVpbmxlaW4sIHdobywgZXZlbiBub3csIOKAnHNob3dzIHVzIHdoZXJlIHRoZSBmdXR1cmUgaXPigJ0gKFRvbSBDbGFuY3kpLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgwNDQwMDAxMzU1IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA0NDAwMDEzNTgiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogNDAyLAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiRmljdGlvbiIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjMuMC4wLnByZXZpZXcuMCIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9Y01aaUR3QUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9Y01aaUR3QUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPWNNWmlEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmRxPVRoZStNb29uK2lzK2ErSGFyc2grTWlzdHJlc3MmaGw9JmNkPTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1jTVppRHdBQVFCQUomZHE9VGhlK01vb24raXMrYStIYXJzaCtNaXN0cmVzcyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9UaGVfTW9vbl9Jc19hX0hhcnNoX01pc3RyZXNzLmh0bWw/aGw9JmlkPWNNWmlEd0FBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPWNNWmlEd0FBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiQSByZXZvbHV0aW9uIG9uIGEgbHVuYXIgcGVuYWwgY29sb2554oCUYWlkZWQgYnkgYSBzZWxmLWF3YXJlIHN1cGVyY29tcHV0ZXLigJRwcm92aWRlcyB0aGUgZnJhbWV3b3JrIGZvciBhIHN0b3J5IG9mIGEgZGl2ZXJzZSBncm91cCBvZiBtZW4gYW5kIHdvbWVuIGdyYXBwbGluZyB3aXRoIHRoZSBldmVyLWNoYW5naW5nIGRlZmluaXRpb25zIG9mIGh1bWFuaXR5LCB0ZWNobm9sb2d5LCBhbmQgZnJlZSB3aWxs4oCUdGhlbWVzIC4uLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIkh0dVJTc0FiMmZFQyIsCiAgICAgICJldGFnIjogIlFjVmlNMzEvRmRNIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvSHR1UlNzQWIyZkVDIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlRoZSBNb29uIElzIGEgSGFyc2ggTWlzdHJlc3MiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIlJvYmVydCBBLiBIZWlubGVpbiIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiTWFjbWlsbGFuIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTk3LTA2LTE1IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBvbmUtYXJtZWQgY29tcHV0ZXIgdGVjaG5pY2lhbiwgYSByYWRpY2FsIGJsb25kZSBib21ic2hlbGwsIGFuIGFnaW5nIGFjYWRlbWljLCBhbmQgYSBzZW50aWVudCBhbGwta25vd2luZyBjb21wdXRlciBsZWFkIHRoZSBsdW5hciBwb3B1bGF0aW9uIGluIGEgcmV2b2x1dGlvbiBhZ2FpbnN0IEVhcnRoJ3MgY29sb25pYWwgcnVsZSIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwMzEyODYzNTUxIgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODAzMTI4NjM1NTUiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogMzg4LAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiRmljdGlvbiIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogMy41LAogICAgICAgICJyYXRpbmdzQ291bnQiOiA5MiwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC4yLjMuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPUh0dVJTc0FiMmZFQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPUh0dVJTc0FiMmZFQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1IdHVSU3NBYjJmRUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1UaGUrTW9vbitpcythK0hhcnNoK01pc3RyZXNzJmhsPSZjZD0yJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9SHR1UlNzQWIyZkVDJmRxPVRoZStNb29uK2lzK2ErSGFyc2grTWlzdHJlc3MmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvVGhlX01vb25fSXNfYV9IYXJzaF9NaXN0cmVzcy5odG1sP2hsPSZpZD1IdHVSU3NBYjJmRUMiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1IdHVSU3NBYjJmRUMmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkEgb25lLWFybWVkIGNvbXB1dGVyIHRlY2huaWNpYW4sIGEgcmFkaWNhbCBibG9uZGUgYm9tYnNoZWxsLCBhbiBhZ2luZyBhY2FkZW1pYywgYW5kIGEgc2VudGllbnQgYWxsLWtub3dpbmcgY29tcHV0ZXIgbGVhZCB0aGUgbHVuYXIgcG9wdWxhdGlvbiBpbiBhIHJldm9sdXRpb24gYWdhaW5zdCBFYXJ0aCYjMzk7cyBjb2xvbmlhbCBydWxlIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiVU9TQUR3QUFRQkFKIiwKICAgICAgImV0YWciOiAid2xyRzdEV3pFOFkiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9VT1NBRHdBQVFCQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiVGhlIE1vb24gSXMgYSBIYXJzaCBNaXN0cmVzcyIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiUm9iZXJ0IEEuIEhlaW5sZWluIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJNYWNtaWxsYW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjE5OTctMDYtMTUiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIG9uZS1hcm1lZCBjb21wdXRlciB0ZWNobmljaWFuLCBhIHJhZGljYWwgYmxvbmRlIGJvbWJzaGVsbCwgYW4gYWdpbmcgYWNhZGVtaWMsIGFuZCBhIHNlbnRpZW50IGFsbC1rbm93aW5nIGNvbXB1dGVyIGxlYWQgdGhlIGx1bmFyIHBvcHVsYXRpb24gaW4gYSByZXZvbHV0aW9uIGFnYWluc3QgRWFydGgncyBjb2xvbmlhbCBydWxlIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODAzMTI4NjM1NTUiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDMxMjg2MzU1MSIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IHRydWUsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDAsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiAzLjUsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDg0LAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1VT1NBRHdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPVVPU0FEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPVVPU0FEd0FBUUJBSiZkcT1UaGUrTW9vbitpcythK0hhcnNoK01pc3RyZXNzJmhsPSZjZD0zJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9VU9TQUR3QUFRQkFKJmRxPVRoZStNb29uK2lzK2ErSGFyc2grTWlzdHJlc3MmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvVGhlX01vb25fSXNfYV9IYXJzaF9NaXN0cmVzcy5odG1sP2hsPSZpZD1VT1NBRHdBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPVVPU0FEd0FBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIk5PTkUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkEgb25lLWFybWVkIGNvbXB1dGVyIHRlY2huaWNpYW4sIGEgcmFkaWNhbCBibG9uZGUgYm9tYnNoZWxsLCBhbiBhZ2luZyBhY2FkZW1pYywgYW5kIGEgc2VudGllbnQgYWxsLWtub3dpbmcgY29tcHV0ZXIgbGVhZCB0aGUgbHVuYXIgcG9wdWxhdGlvbiBpbiBhIHJldm9sdXRpb24gYWdhaW5zdCBFYXJ0aCYjMzk7cyBjb2xvbmlhbCBydWxlIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiYmJ3UXJnRUFDQUFKIiwKICAgICAgImV0YWciOiAiakNRNGxaZXV3bk0iLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9iYndRcmdFQUNBQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiVGhlIE1vb24gaXMgYSBIYXJzaCBNaXN0cmVzcyIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMTk3NyIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwNDUwMDM1ODMyIgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA0NTAwMzU4MzgiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogMjg4LAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogInByZXZpZXctMS4wLjAiLAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPWJid1FyZ0VBQ0FBSiZkcT1UaGUrTW9vbitpcythK0hhcnNoK01pc3RyZXNzJmhsPSZjZD00JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9YmJ3UXJnRUFDQUFKJmRxPVRoZStNb29uK2lzK2ErSGFyc2grTWlzdHJlc3MmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvVGhlX01vb25faXNfYV9IYXJzaF9NaXN0cmVzcy5odG1sP2hsPSZpZD1iYndRcmdFQUNBQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPWJid1FyZ0VBQ0FBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIk5PTkUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIk1sYUVBZ0FBUUJBSiIsCiAgICAgICJldGFnIjogInFyV01ocHJXL2wwIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvTWxhRUFnQUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlRoZSBNb29uIGlzIGEgSGFyc2ggTWlzdHJlc3MiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIlJvYmVydCBBLiBIZWlubGVpbiIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiSGFjaGV0dGUgVUsiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTQtMDgtMTQiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbiAyMDc1LCB0aGUgTW9vbiBpcyBubyBsb25nZXIgYSBwZW5hbCBjb2xvbnkuIEJ1dCBpdCBpcyBzdGlsbCBhIHByaXNvbi4uLiBMaWZlIGlzbid0IGVhc3kgZm9yIHRoZSBwb2xpdGljYWwgZGlzc2lkZW50cyBhbmQgY29udmljdHMgd2hvIGxpdmUgaW4gdGhlIHNjYXR0ZXJlZCBjb2xvbmllcyB0aGF0IG1ha2UgdXAgbHVuYXIgY2l2aWxpc2F0aW9uLiBFdmVyeXRoaW5nIGlzIHJlZ3VsYXRlZCBzdHJpY3RseSwgZWZmaWNpZW50bHkgYW5kIGNoZWFwbHkgYnkgYSBjZW50cmFsIHN1cGVyY29tcHV0ZXIsIEhPTE1FUyBJVi4gV2hlbiBodW1ibGUgdGVjaG5pY2lhbiBNYW5uaWUgTydLZWxseS1EYXZpcyBkaXNjb3ZlcnMgdGhhdCBIT0xNRVMgSVYgaGFzIHF1aWV0bHkgYWNoaWV2ZWQgY29uc2Npb3VzbmVzcyAoYW5kIGRldmVsb3BlZCBhIHNlbnNlIG9mIGh1bW91ciksIHRoZSBjaG9pY2UgaXMgY2xlYXI6IGVpdGhlciByZXBvcnQgdGhlIHByb2JsZW0gdG8gdGhlIGF1dGhvcml0aWVzLi4uIG9yIGJlY29tZSBmcmllbmRzLiBBbmQgcGVyaGFwcyBvdmVydGhyb3cgdGhlIGdvdmVybm1lbnQgd2hpbGUgdGhleSdyZSBhdCBpdC4gVGhlIE1vb24gaXMgYSBIYXJzaCBNaXN0cmVzcyBoYXMgYmVlbiBjYWxsZWQgUm9iZXJ0IEEuIEhlaW5sZWluJ3MgY3Jvd25pbmcgYWNoaWV2ZW1lbnQuIEhpcyBiZXN0LWtub3duIG5vdmVscyBpbmNsdWRlIFN0YXJzaGlwIFRyb29wZXJzIE1pc3RyZXNzIGFuZCBTdHJhbmdlciBpbiBhIFN0cmFuZ2UgTGFuZC4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MTQ0NDc5MTA0NCIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIxNDQ0NzkxMDQ0IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogMjg4LAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiRmljdGlvbiIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogNSwKICAgICAgICAicmF0aW5nc0NvdW50IjogMSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiB0cnVlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIxLjE1LjE3LjAucHJldmlldy4yIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1NbGFFQWdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPU1sYUVBZ0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPU1sYUVBZ0FBUUJBSiZkcT1UaGUrTW9vbitpcythK0hhcnNoK01pc3RyZXNzJmhsPSZjZD01JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9TWxhRUFnQUFRQkFKJmRxPVRoZStNb29uK2lzK2ErSGFyc2grTWlzdHJlc3MmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvVGhlX01vb25faXNfYV9IYXJzaF9NaXN0cmVzcy5odG1sP2hsPSZpZD1NbGFFQWdBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1NbGFFQWdBQVFCQUomaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJOT05FIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJBbmQgcGVyaGFwcyBvdmVydGhyb3cgdGhlIGdvdmVybm1lbnQgd2hpbGUgdGhleSYjMzk7cmUgYXQgaXQuIFRoZSBNb29uIGlzIGEgSGFyc2ggTWlzdHJlc3MgaGFzIGJlZW4gY2FsbGVkIFJvYmVydCBBLiBIZWlubGVpbiYjMzk7cyBjcm93bmluZyBhY2hpZXZlbWVudC4gSGlzIGJlc3Qta25vd24gbm92ZWxzIGluY2x1ZGUgU3RhcnNoaXAgVHJvb3BlcnMgTWlzdHJlc3MgYW5kIFN0cmFuZ2VyIGluIGEgU3RyYW5nZSBMYW5kLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIkJHM1NqVmk1QXZBQyIsCiAgICAgICJldGFnIjogIktRQ0VPc2RmNzU4IiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvQkczU2pWaTVBdkFDIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkhhdmUgU3BhY2UgU3VpdCwgV2lsbCBUcmF2ZWwiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIlJvYmVydCBBLiBIZWlubGVpbiIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiU2ltb24gYW5kIFNjaHVzdGVyIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDA1LTAyLTA4IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGVlbmFnZXIgQ2xpZmZvcmQgXCJLaXBcIiBSdXNzZWxsIHdpbnMgc2Vjb25kIHByaXplIGluIGEgc29hcCBqaW5nbGUgY29udGVzdCwgYSB1c2VkIHdvcm4gc3BhY2VzdWl0LCBhbmQsIHdoaWxlIHRyeWluZyBvbiBoaXMgcHJpemUgaW4gaGlzIGJhY2t5YXJkLCBzdWRkZW5seSBmaW5kcyBoaW1zZWxmIG9uIGEgc3BhY2Ugb2R5c3NleSBhcyBhIHByaXNvbmVyIGFib2FyZCB0aGUgc2hpcCBvZiBhIHNwYWNlIHBpcmF0ZSwgaGVhZGVkIHRvd2FyZCB0aGUgTW9vbiBhbmQgYSBzZXJpZXMgb2YgZW5jb3VudGVycyB3aXRoIG1hbnkgYml6YXJyZSBjcmVhdHVyZXMgYW5kIHNpdHVhdGlvbnMuIFJlcHJpbnQuIDEwLDAwMCBmaXJzdCBwcmludGluZy4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MTQxNjUwNTQ5NSIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIxNDE2NTA1NDkwIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDI1OCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDMuNSwKICAgICAgICAicmF0aW5nc0NvdW50IjogMzIsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjAuMi4xLjAucHJldmlldy4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1CRzNTalZpNUF2QUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1CRzNTalZpNUF2QUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9QkczU2pWaTVBdkFDJnByaW50c2VjPWZyb250Y292ZXImZHE9VGhlK01vb24raXMrYStIYXJzaCtNaXN0cmVzcyZobD0mY2Q9NiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPUJHM1NqVmk1QXZBQyZkcT1UaGUrTW9vbitpcythK0hhcnNoK01pc3RyZXNzJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0hhdmVfU3BhY2VfU3VpdF9XaWxsX1RyYXZlbC5odG1sP2hsPSZpZD1CRzNTalZpNUF2QUMiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRF9GT1JfQUNDRVNTSUJJTElUWSIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1CRzNTalZpNUF2QUMmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIlRlZW5hZ2VyIENsaWZmb3JkICZxdW90O0tpcCZxdW90OyBSdXNzZWxsIHdpbnMgc2Vjb25kIHByaXplIGluIGEgc29hcCBqaW5nbGUgY29udGVzdCwgYSB1c2VkIHdvcm4gc3BhY2VzdWl0LCBhbmQsIHdoaWxlIHRyeWluZyBvbiBoaXMgcHJpemUgaW4gaGlzIGJhY2t5YXJkLCBzdWRkZW5seSBmaW5kcyBoaW1zZWxmIG9uIGEgc3BhY2Ugb2R5c3NleSBhcyBhIHByaXNvbmVyIGFib2FyZCB0aGUgc2hpcCBvZiBhIHNwYWNlIHBpcmF0ZSwgLi4uIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiemlHNkJ3QUFRQkFKIiwKICAgICAgImV0YWciOiAieVhDVS9iT0U3VlUiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy96aUc2QndBQVFCQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiU3RlZWwgQmVhY2giLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkpvaG4gVmFybGV5IgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJQZW5ndWluIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTkzLTA4LTAxIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBzY2llbmNlIGZpY3Rpb24gZXBpYyBmcm9tIFwidGhlIGJlc3Qgd3JpdGVyIGluIEFtZXJpY2FcIiAoVG9tIENsYW5jeSnigJRIdWdvIGFuZCBOZWJ1bGEgYXdhcmQtd2lubmluZyBhdXRob3IgSm9obiBWYXJsZXkuIEZsZWVpbmcgRWFydGggYWZ0ZXIgYW4gYWxpZW4gaW52YXNpb24sIHRoZSBodW1hbiByYWNlIHN0YW5kcyBvbiB0aGUgdGhyZXNob2xkIG9mIGV2b2x1dGlvbi4gVGhlaXIgbmV3IGhvbWUgaXMgTHVuYSwgYSBtb29uIGNvbG9ueSBibGVzc2VkIHdpdGggY3JlYXR1cmUgY29tZm9ydHMsIHByb2xvbmdlZCBsaWZlc3BhbnMsIGRpZ2l0YWwgbWVtb3JpZXMsIGFuZCBpbnN0YW50IHNleCBjaGFuZ2VzLiBCdXQgdGhlIHBlb3BsZSBvZiBMdW5hIGFyZSBib3JlZCwgcmVzdGxlc3MsIHN1aWNpZGFs4oCUYW5kIHNvIGlzIHRoZSBjb21wdXRlciB0aGF0IG1vbml0b3JzIHRoZWlyIGV4aXN0ZW5jZS4uLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxMTAxNjU2MDk5IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjExMDE2NTYwOTMiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiB0cnVlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA1NzYsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiAzLjUsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDcsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogdHJ1ZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS45LjkuMC5wcmV2aWV3LjIiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXppRzZCd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXppRzZCd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD16aUc2QndBQVFCQUomcGc9UFAxJmRxPVRoZStNb29uK2lzK2ErSGFyc2grTWlzdHJlc3MmaGw9JmNkPTcmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXppRzZCd0FBUUJBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD16aUc2QndBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA4Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogOC45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD16aUc2QndBQVFCQUomcmRpZD1ib29rLXppRzZCd0FBUUJBSiZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDg5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiA4OTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZ2lmdGFibGUiOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9TdGVlbF9CZWFjaC1zYW1wbGUtZXB1Yi5hY3NtP2lkPXppRzZCd0FBUUJBSiZmb3JtYXQ9ZXB1YiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9emlHNkJ3QUFRQkFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJBIHNjaWVuY2UgZmljdGlvbiBlcGljIGZyb20gJnF1b3Q7dGhlIGJlc3Qgd3JpdGVyIGluIEFtZXJpY2EmcXVvdDsgKFRvbSBDbGFuY3kp4oCUSHVnbyBhbmQgTmVidWxhIGF3YXJkLXdpbm5pbmcgYXV0aG9yIEpvaG4gVmFybGV5LiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogInBuZDBDd0FBUUJBSiIsCiAgICAgICJldGFnIjogIkdHaEFmd0hZeEJjIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvcG5kMEN3QUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkJleW9uZCBUaGlzIEhvcml6b24iLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIlJvYmVydCBBLiBIZWlubGVpbiIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiQmFlbiBQdWJsaXNoaW5nIEVudGVycHJpc2VzIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDE0LTA5LTE2IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiVXRvcGlhIGhhcyBiZWVuIGFjaGlldmVkLiBGb3IgY2VudHVyaWVzLCBkaXNlYXNlLCBodW5nZXIsIHBvdmVydHkgYW5kIHdhciBoYXZlIGJlZW4gdGhpbmdzIGZvdW5kIG9ubHkgaW4gdGhlIGhpc3Rvcmllcy4gQW5kIGFwcGxpZWQgZ2VuZXRpY3MgaGFzIGdpdmVuIG1lbiBhbmQgd29tZW4gdGhlIGJvZGllcyBvZiBhdGhsZXRlcyBhbmQgYSBsaWZlc3BhbiBvZiBvdmVyIGEgY2VudHVyeS4gVGhleSBzaG91bGQgYWxsIGhhdmUgYmVlbiB2ZXJ5IGhhcHB5Li4uLiBCdXQgSGFtaWx0b24gRmVsaXggaXMgYm9yZWQuIEFuZCBoZSBpcyB0aGUgY3VsbWluYXRpb24gb2YgYSBzdGFyIGxpbmU7IGVhY2ggb2YgaGlzIGxhc3QgdGhpcnR5IGFuY2VzdG9ycyBjaG9zZW4gZm9yIHN1cGVyaW9yIGdlbmVzLiBIYW1pbHRvbiBpcywgYXMgZmFyIGFzIGdlbmV0aWNzIGNhbiBwcm9kdWNlIG9uZSwgdGhlIHVsdGltYXRlIG1hbi4gQW5kIHRoaXMgdWx0aW1hdGUgbWFuIGNhbiBzZWUgbm8gcmVhc29uIHdoeSB0aGUgaHVtYW4gcmFjZSBzaG91bGQgc3Vydml2ZSwgYW5kIGhhcyBubyBpbnRlbnRpb24gb2YgY29udGludWluZyB0aGUgcG9pbnRsZXNzIGNvbWVkeS4gSG93ZXZlciwgSGFtaWx0b24ncyBsaWZlIGlzIGFib3V0IHRvIGJlY29tZSBsZXNzIGJvcmluZy4gQSBzZWNyZXQgY2FiYWwgb2YgcmV2b2x1dGlvbmFyaWVzIHdobyBmaW5kIHV0b3BpYSBub3QganVzdCBib3JpbmcsIGJ1dCBkZXNwZXJhdGVseSBpbiBuZWVkIG9mIGxlYWRlcnMgd2hvIGtub3cganVzdCBXaGF0IE5lZWRzIHRvIGJlIERvbmUsIGFyZSBwbGFubmluZyB0byByZXZvbHQgYW5kIHB1dCB0aGVtc2VsdmVzIGluIGNoYXJnZS4gS25vd2luZyBvZiBIYW1pbHRvbidzIGRpc2VuY2hhbnRtZW50IHdpdGggdGhlIG1vZGVybiB3b3JsZCwgdGhleSBoYXZlIHJlY3J1aXRlZCBoaW0gdG8gam9pbiB0aGVpciBHbG9yaW91cyBSZXZvbHV0aW9uLiBCaWcgbWlzdGFrZSEgVGhlIHJldm9sdXRpb25hcmllcyBhcmUgYWJvdXQgdG8gZmluZCBvdXQgdGhhdCByZWNydWl0aW5nIGEgc3VwZXJtYW4gaXMgZGVmaW5pdGVseSBub3QgYSBnb29kIGlkZWEuLi4uIFdpdGggYW4gYWxsIG5ldyBhZnRlcndvcmQgYnkgVG9ueSBEYW5pZWwuIEF0IHRoZSBwdWJsaXNoZXIncyByZXF1ZXN0LCB0aGlzIHRpdGxlIGlzIHNvbGQgd2l0aG91dCBEUk0gKERpZ2l0YWwgUmlnaHRzIE1hbmFnZW1lbnQpLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxNjI1NzkzMTQwIgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjE2MjU3OTMxNDYiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiB0cnVlLAogICAgICAgICAgImltYWdlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDI0MCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDIuNSwKICAgICAgICAicmF0aW5nc0NvdW50IjogMTMsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogdHJ1ZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS4zLjMuMC5wcmV2aWV3LjMiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXBuZDBDd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXBuZDBDd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1wbmQwQ3dBQVFCQUomcGc9UFAxJmRxPVRoZStNb29uK2lzK2ErSGFyc2grTWlzdHJlc3MmaGw9JmNkPTgmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXBuZDBDd0FBUUJBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1wbmQwQ3dBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA3Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogNy45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1wbmQwQ3dBQVFCQUomcmRpZD1ib29rLXBuZDBDd0FBUUJBSiZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDc5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiA3OTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZ2lmdGFibGUiOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9cG5kMEN3QUFRQkFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJVdG9waWEgaGFzIGJlZW4gYWNoaWV2ZWQuIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAicWs2WUR3QUFRQkFKIiwKICAgICAgImV0YWciOiAiaWE2SFVKWjZKemsiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9xazZZRHdBQVFCQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiRHJlc3NlZCBmb3IgYSBEYW5jZSBpbiB0aGUgU25vdyIsCiAgICAgICAgInN1YnRpdGxlIjogIldvbWVuJ3MgVm9pY2VzIGZyb20gdGhlIEd1bGFnIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJNb25pa2EgWmd1c3RvdmEiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIk90aGVyIFByZXNzLCBMTEMiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMjAtMDItMDQiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIHBvaWduYW50IGFuZCB1bmV4cGVjdGVkbHkgaW5zcGlyYXRpb25hbCBhY2NvdW50IG9mIHdvbWVuJ3Mgc3VmZmVyaW5nIGFuZCByZXNpbGllbmNlIGluIFN0YWxpbidzIGZvcmNlZCBsYWJvciBjYW1wcywgZGlsaWdlbnRseSB0cmFuc2NyaWJlZCBpbiB0aGUga2l0Y2hlbnMgYW5kIGxpdmluZyByb29tcyBvZiBuaW5lIHN1cnZpdm9ycy4gVGhlIHBhaW4gaW5mbGljdGVkIGJ5IHRoZSBndWxhZ3MgaGFzIGNhc3QgYSBsb25nIGFuZCBkYXJrIHNoYWRvdyBvdmVyIFNvdmlldC1lcmEgaGlzdG9yeS4gWmd1c3RvdsOhJ3MgY29sbGVjdGlvbiBvZiBpbnRlcnZpZXdzIHdpdGggZm9ybWVyIGZlbWFsZSBwcmlzb25lcnMgbm90IG9ubHkgY2hyb25pY2xlcyB0aGUgaGFyZHNoaXBzIG9mIHRoZSBjYW1wcywgYnV0IGFsc28gc2VydmVzIGFzIHRlc3RhbWVudCB0byB0aGUgcG93ZXIgb2YgYmVhdXR5IGluIGZhY2Ugb2YgYWR2ZXJzaXR5LiBXaGVyZSBvbmUgd291bGQgZXhwZWN0IHRvIGZpbmQgc3RvcmllcyBvZiBob3BlbGVzc25lc3MgYW5kIGRlc3BhaXIsIFpndXN0b3bDoSBoYXMgdW5lYXJ0aGVkIHRhbGVzIG9mIHRoZSBsb3ZlLCBhcnQsIGFuZCBmcmllbmRzaGlwIHRoYXQgcGVyc2lzdGVkIGluIHRpbWVzIG9mIHRyYWdlZHkuIEFjcm9zcyB0aGUgU292aWV0IFVuaW9uLCBwcmlzb25lcnMgYXJlIHNhaWQgdG8gaGF2ZSBjb21wb3NlZCBhbmQgbWVtb3JpemVkIHRob3VzYW5kcyBvZiB2ZXJzZXMuIEdhbHlhIFNhbm92YSwgYm9ybiBpbiBhIFNpYmVyaWFuIGd1bGFnLCByZW1lbWJlcnMgcmVhZGluZyBmcm9tIGEgaGFuZC1zdGl0Y2hlZCBjb3B5IG9mIExpdHRsZSBSZWQgUmlkaW5nIEhvb2QuIElyaW5hIEVtZWx5YW5vdmEgcGFzc2VkIHBvZW1zIHRvIHRoZSBtYWxlIHByaXNvbmVyIHNoZSBoYWQgZ3Jvd24gdG8gbG92ZS4gSW4gdGhpcyB3YXksIHRoZSBhcnRzIGxlbnQgYW4gYWlyIG9mIGh1bWFuaXR5IHRvIHRoZSB3b21lbidzIGJydXRhbCByZWFsaXRpZXMuIFRoZXNlIHN0b3JpZXMsIGNvbGxlY3RlZCBpbiB0aGUgdmVpbiBvZiBTdmV0bGFuYSBBbGV4aWV2aWNoJ3MgTm9iZWwgUHJpemUtd2lubmluZyBvcmFsIGhpc3RvcmllcywgdHVybiBvbmUgb2YgdGhlIGRhcmtlc3QgcGVyaW9kcyBvZiB0aGUgU292aWV0IGVyYSBpbnRvIGEgc29uZyBvZiBodW1hbiBwZXJzZXZlcmFuY2UsIGluIGEgd2F5IHRoYXQgcmVhZHMgYXMgYW4gaW50aW1hdGUgZmFtaWx5IGhpc3RvcnkuIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODE1OTA1MTE4NDgiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMTU5MDUxMTg0MCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IHRydWUsCiAgICAgICAgICAiaW1hZ2UiOiB0cnVlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogMjcyLAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiSGlzdG9yeSIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogNCwKICAgICAgICAicmF0aW5nc0NvdW50IjogMSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiB0cnVlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIxLjEuMS4wLnByZXZpZXcuMyIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9cWs2WUR3QUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9cWs2WUR3QUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPXFrNllEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmRxPVRoZStNb29uK2lzK2ErSGFyc2grTWlzdHJlc3MmaGw9JmNkPTkmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXFrNllEd0FBUUJBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1xazZZRHdBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAyLjk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogMi45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1xazZZRHdBQVFCQUomcmRpZD1ib29rLXFrNllEd0FBUUJBSiZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDI5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAyOTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZ2lmdGFibGUiOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9EcmVzc2VkX2Zvcl9hX0RhbmNlX2luX3RoZV9Tbm93LXNhbXBsZS1lcHViLmFjc20/aWQ9cWs2WUR3QUFRQkFKJmZvcm1hdD1lcHViJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL0RyZXNzZWRfZm9yX2FfRGFuY2VfaW5fdGhlX1Nub3ctc2FtcGxlLXBkZi5hY3NtP2lkPXFrNllEd0FBUUJBSiZmb3JtYXQ9cGRmJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9cWs2WUR3QUFRQkFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJUaGVzZSBzdG9yaWVzLCBjb2xsZWN0ZWQgaW4gdGhlIHZlaW4gb2YgU3ZldGxhbmEgQWxleGlldmljaOKAmXMgTm9iZWwgUHJpemUtd2lubmluZyBvcmFsIGhpc3RvcmllcywgdHVybiBvbmUgb2YgdGhlIGRhcmtlc3QgcGVyaW9kcyBvZiB0aGUgU292aWV0IGVyYSBpbnRvIGEgc29uZyBvZiBodW1hbiBwZXJzZXZlcmFuY2UsIGluIGEgd2F5IHRoYXQgcmVhZHMgYXMgYW4gaW50aW1hdGUgZmFtaWx5IGhpc3RvcnkuIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiMlZmVEJ3QUFRQkFKIiwKICAgICAgImV0YWciOiAic1JmaE81RTdYYnciLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy8yVmZUQndBQVFCQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiU3RydWN0dXJlcyBvciBXaHkgdGhpbmdzIGRvbuKAmXQgZmFsbCBkb3duIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJKLiBHb3Jkb24iCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlNwcmluZ2VyIFNjaWVuY2UgJiBCdXNpbmVzcyBNZWRpYSIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAxMi0xMi0wNiIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkkgYW0gdmVyeSBtdWNoIGF3YXJlIHRoYXQgaXQgaXMgYW4gYWN0IG9mIGV4dHJlbWUgcmFzaG5lc3MgdG8gYXR0ZW1wdCB0byB3cml0ZSBhbiBlbGVtZW50YXJ5IGJvb2sgYWJvdXQgc3RydWN0dXJlcy4gSW5kZWVkIGl0IGlzIG9ubHkgd2hlbiB0aGUgc3ViamVjdCBpcyBzdHJpcHBlZCBvZiBpdHMgbWF0aGVtYXRpY3MgdGhhdCBvbmUgYmVnaW5zIHRvIHJlYWxpemUgaG93IGRpZmZpY3VsdCBpdCBpcyB0byBwaW4gZG93biBhbmQgZGVzY3JpYmUgdGhvc2Ugc3RydWN0dXJhbCBjb25jZXB0cyB3aGljaCBhcmUgb2Z0ZW4gY2FsbGVkJyBlbGVtZW50YXJ5JzsgYnkgd2hpY2ggSSBzdXBwb3NlIHdlIG1lYW4gJ2Jhc2ljJyBvciAnZnVuZGFtZW50YWwnLiBTb21lIG9mIHRoZSBvbWlzIHNpb25zIGFuZCBvdmVyc2ltcGxpZmljYXRpb25zIGFyZSBpbnRlbnRpb25hbCBidXQgbm8gZG91YnQgc29tZSBvZiB0aGVtIGFyZSBkdWUgdG8gbXkgb3duIGJydXRlIGlnbm9yYW5jZSBhbmQgbGFjayBvZiB1bmRlciBzdGFuZGluZyBvZiB0aGUgc3ViamVjdC4gQWx0aG91Z2ggdGhpcyB2b2x1bWUgaXMgbW9yZSBvciBsZXNzIGEgc2VxdWVsIHRvIFRoZSBOZXcgU2NpZW5jZSBvZiBTdHJvbmcgTWF0ZXJpYWxzIGl0IGNhbiBiZSByZWFkIGFzIGFuIGVudGlyZWx5IHNlcGFyYXRlIGJvb2sgaW4gaXRzIG93biByaWdodC4gRm9yIHRoaXMgcmVhc29uIGEgY2VydGFpbiBhbW91bnQgb2YgcmVwZXRpdGlvbiBoYXMgYmVlbiB1bmF2b2lkYWJsZSBpbiB0aGUgZWFybGllciBjaGFwdGVycy4gSSBoYXZlIHRvIHRoYW5rIGEgZ3JlYXQgbWFueSBwZW9wbGUgZm9yIGZhY3R1YWwgaW5mb3JtYXRpb24sIHN1Z2dlc3Rpb25zIGFuZCBmb3Igc3RpbXVsYXRpbmcgYW5kIHNvbWV0aW1lcyBoZWF0ZWQgZGlzY3Vzc2lvbnMuIEFtb25nIHRoZSBsaXZpbmcsIG15IGNvbGxlYWd1ZXMgYXQgUmVhZGluZyBVbml2ZXJzaXR5IGhhdmUgYmVlbiBnZW5lcm91cyB3aXRoIGhlbHAsIG5vdGFibHkgUHJvZmVzc29yIFcuIEQuIEJpZ2dzIChQcm9mZXNzb3Igb2YgQnVpbGRpbmcgVGVjaG5vbG9neSksIERyIFJpY2hhcmQgQ2hhcGxpbiwgRHIgR2lvcmdpbyBKZXJvbmltaWRpcywgRHIgSnVsaWFuIFZpbmNlbnQgYW5kIERyIEhlbnJ5IEJseXRoOyBQcm9mZXNzb3IgQW50aG9ueSBGbGV3LCBQcm9mZXNzb3Igb2YgUGhpbG9zb3BoeSwgbWFkZSB1c2VmdWwgc3VnZ2VzdGlvbnMgYWJvdXQgdGhlIGxhc3QgY2hhcHRlci4gSSBhbSBhbHNvIGdyYXRlZnVsIHRvIE1yIEpvaG4gQmFydGxldHQsIENvbnN1bHRhbnQgTmV1cm9zdXJnZW9uIGF0IHRoZSBCcm9vayBIb3NwaXRhbC4gUHJvZmVzc29yIFQuIFAuIEh1Z2hlcyBvZiB0aGUgVW5pdmVyc2l0eSBvZiB0aGUgV2VzdCBJbmRpZXMgaGFzIGJlZW4gaGVscGZ1bCBhYm91dCByb2NrZXRzIGFuZCBtYW55IG90aGVyIHRoaW5ncyBiZXNpZGVzLiBNeSBzZWNyZXRhcnksIE1ycyBKZWFuIENvbGxpbnMsIHdhcyBhIGdyZWF0IGhlbHAgaW4gdGltZXMgb2YgdHJvdWJsZS4gTXJzIE5ldGhlcmNvdCBvZiBWb2d1ZSB3YXMga2luZCB0byBtZSBhYm91dCBkcmVzc21ha2luZy4gTXIgR2VyYWxkIExlYWNoIGFuZCBhbHNvIG1hbnkgb2YgdGhlIGVkaXRvcmlhbCBzdGFmZiBvZiBQZW5ndWlucyBoYXZlIGV4ZXJjaXNlZCB0aGVpciBhY2N1c3RvbWVkIHBhdGllbmNlIGFuZCBoZWxwZnVsbmVzcy4gQW1vbmcgdGhlIGRlYWQsIGwgb3dlIGEgZ3JlYXQgZGVhbCB0byBEciBNYXJrIFByeW9yIC0gbGF0ZWx5IG9mIFRyaW5pdHkgQ29sbGVnZSwgQ2FtYnJpZGdlIC0gZXNwZWNpYWxseSBmb3IgZGlzY3Vzc2lvbnMgYWJvdXQgYmlvbWVjaGFuaWNzIHdoaWNoIGV4dGVuZGVkIG92ZXIgYSBwZXJpb2Qgb2YgbmVhcmx5IHRoaXJ0eSB5ZWFycy4gTGFzdGx5LCBmb3IgcmVhc29ucyB3aGljaCBtdXN0IHN1cmVseSBiZSBvYnZpb3VzLCBsIG93ZSBhIGh1bWJsZSBvYmxhdGlvbiB0byBIZXJvZG90dXMsIG9uY2UgYSBjaXRpemVuIG9mIEhhbGljYW1hc3N1cy4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MTQ2MTU5MDc0MyIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIxNDYxNTkwNzQ0IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiB0cnVlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogMzk1LAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiVGVjaG5vbG9neSAmIEVuZ2luZWVyaW5nIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA0LAogICAgICAgICJyYXRpbmdzQ291bnQiOiA1LAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0yVmZUQndBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0yVmZUQndBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9MlZmVEJ3QUFRQkFKJnBnPVBBNSZkcT1UaGUrTW9vbitpcythK0hhcnNoK01pc3RyZXNzJmhsPSZjZD0xMCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9MlZmVEJ3QUFRQkFKJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPTJWZlRCd0FBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiRk9SX1NBTEVfQU5EX1JFTlRBTCIsCiAgICAgICAgImlzRWJvb2siOiB0cnVlLAogICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogMTU5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogMTI3LjIsCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJidXlMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9MlZmVEJ3QUFRQkFKJnJkaWQ9Ym9vay0yVmZUQndBQVFCQUomcmRvdD0xJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAib2ZmZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmluc2t5T2ZmZXJUeXBlIjogMSwKICAgICAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAxNTkwMDAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAxMjcyMDAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAzLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDU1NjUwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogNDg0MjAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZW50YWxEdXJhdGlvbiI6IHsKICAgICAgICAgICAgICAidW5pdCI6ICJEQVkiLAogICAgICAgICAgICAgICJjb3VudCI6IDkwCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvU3RydWN0dXJlc19vcl9XaHlfdGhpbmdzX2Rvbl90X2ZhbGxfZG93bi1zYW1wbGUtcGRmLmFjc20/aWQ9MlZmVEJ3QUFRQkFKJmZvcm1hdD1wZGYmb3V0cHV0PWFjczRfZnVsZmlsbG1lbnRfdG9rZW4mZGxfdHlwZT1zYW1wbGUmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD0yVmZUQndBQVFCQUomaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkFsdGhvdWdoIHRoaXMgdm9sdW1lIGlzIG1vcmUgb3IgbGVzcyBhIHNlcXVlbCB0byBUaGUgTmV3IFNjaWVuY2Ugb2YgU3Ryb25nIE1hdGVyaWFscyBpdCBjYW4gYmUgcmVhZCBhcyBhbiBlbnRpcmVseSBzZXBhcmF0ZSBib29rIGluIGl0cyBvd24gcmlnaHQuIEZvciB0aGlzIHJlYXNvbiBhIGNlcnRhaW4gYW1vdW50IG9mIHJlcGV0aXRpb24gaGFzIGJlZW4gdW5hdm9pZGFibGUgaW4gdGhlIGVhcmxpZXIgY2hhcHRlcnMuIgogICAgICB9CiAgICB9CiAgXQp9Cg==
  recorded_at: Tue, 14 Feb 2023 21:37:02 GMT
recorded_with: VCR 6.1.0

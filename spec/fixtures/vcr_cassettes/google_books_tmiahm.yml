---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/books/v1/volumes?intitle=The%20Moon%20is%20a%20Harsh%20Mistress&key=<google_books_api_key>&q=The%20Moon%20is%20a%20Harsh%20Mistress
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Tue, 14 Feb 2023 16:24:50 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 14 Feb 2023 16:24:49 GMT
recorded_with: VCR 6.1.0
